name: Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Build the Docker image
      - name: Build Docker Image
        run: |
          docker build \
            --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} \
            --build-arg GOOGLE_OAUTH_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_CLIENT_ID }} \
            --build-arg GOOGLE_OAUTH_CLIENT_SECRET=${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }} \
            --build-arg GOOGLE_OAUTH_CALLBACK_URL=${{ secrets.GOOGLE_OAUTH_CALLBACK_URL }} \
            --build-arg JWT_SECRET=${{ secrets.JWT_SECRET }} \
            --build-arg JWT_EXPIRE_IN=${{ secrets.JWT_EXPIRE_IN }} \
            --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            --build-arg AWS_REGION=${{ secrets.AWS_REGION }} \
            -t nestjs-app:latest .

      # Deploy the container to EC2
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "${SSH_PRIVATE_KEY}" > ssh_key
          chmod 600 ssh_key
          ssh -o StrictHostKeyChecking=no -i ssh_key $EC2_USER@$EC2_HOST << 'EOF'
            docker stop nestjs-app || true
            docker rm nestjs-app || true
            docker rmi nestjs-app:latest || true
            docker pull nestjs-app:latest
            docker run -d -p 3000:3000 \
              --name nestjs-app \
              -e DATABASE_URL=${DATABASE_URL} \
              -e GOOGLE_OAUTH_CLIENT_ID=${GOOGLE_OAUTH_CLIENT_ID} \
              -e GOOGLE_OAUTH_CLIENT_SECRET=${GOOGLE_OAUTH_CLIENT_SECRET} \
              -e GOOGLE_OAUTH_CALLBACK_URL=${GOOGLE_OAUTH_CALLBACK_URL} \
              -e JWT_SECRET=${JWT_SECRET} \
              -e JWT_EXPIRE_IN=${JWT_EXPIRE_IN} \
              -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
              -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
              -e AWS_REGION=${AWS_REGION} \
              nestjs-app:latest
          EOF
